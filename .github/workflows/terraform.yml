name: Terraform Shared Library

on:
  workflow_call:
      inputs:
        repository:
          required: true
          type: string
        branch:
          required: true
          type: string
        environment:
          required: true
          type: string
        workspace:
          required: true
          type: string
        commit_username:
          required: true
          type: string
        commit_email:
          required: true
          type: string
        commit_message:
          required: true
          type: string
      secrets:
        github_pat:
          required: true
        access_key:
          required: true
        secret_key:
          required: true

jobs:
  terraform:
    name: terraform
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.branch }}
          token: ${{ secrets.github_pat }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.25

      - name: Terraform Workspace
        id: workspace
        run: terraform workspace select ${{inputs.workspace}}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      # - name: Terraform Plan
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.access_key }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_key }}
      #   id: plan
      #   if: github.event_name == 'pull_request'
      #   run: terraform plan -no-color
      #   continue-on-error: true

      # - name: Terraform Plan Status
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1
        
      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      #   run: terraform apply -auto-approve

      # - name: Commit Terraform state changes
      #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      #   run: |
      #      echo "Commiting state changes"
      #      git config --global user.name ${{ inputs.commit_username}}
      #      git config --global user.email ${{ inputs.commit_email}}
      #      git commit -am ${{ inputs.commit_message}}
      #      git push

  
